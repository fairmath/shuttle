// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ServiceGetValidatorSetByHeightReader is a Reader for the ServiceGetValidatorSetByHeight structure.
type ServiceGetValidatorSetByHeightReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServiceGetValidatorSetByHeightReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewServiceGetValidatorSetByHeightOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewServiceGetValidatorSetByHeightDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewServiceGetValidatorSetByHeightOK creates a ServiceGetValidatorSetByHeightOK with default headers values
func NewServiceGetValidatorSetByHeightOK() *ServiceGetValidatorSetByHeightOK {
	return &ServiceGetValidatorSetByHeightOK{}
}

/*
ServiceGetValidatorSetByHeightOK describes a response with status code 200, with default header values.

A successful response.
*/
type ServiceGetValidatorSetByHeightOK struct {
	Payload *ServiceGetValidatorSetByHeightOKBody
}

// IsSuccess returns true when this service get validator set by height o k response has a 2xx status code
func (o *ServiceGetValidatorSetByHeightOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this service get validator set by height o k response has a 3xx status code
func (o *ServiceGetValidatorSetByHeightOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this service get validator set by height o k response has a 4xx status code
func (o *ServiceGetValidatorSetByHeightOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this service get validator set by height o k response has a 5xx status code
func (o *ServiceGetValidatorSetByHeightOK) IsServerError() bool {
	return false
}

// IsCode returns true when this service get validator set by height o k response a status code equal to that given
func (o *ServiceGetValidatorSetByHeightOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the service get validator set by height o k response
func (o *ServiceGetValidatorSetByHeightOK) Code() int {
	return 200
}

func (o *ServiceGetValidatorSetByHeightOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cosmos/base/tendermint/v1beta1/validatorsets/{height}][%d] serviceGetValidatorSetByHeightOK %s", 200, payload)
}

func (o *ServiceGetValidatorSetByHeightOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cosmos/base/tendermint/v1beta1/validatorsets/{height}][%d] serviceGetValidatorSetByHeightOK %s", 200, payload)
}

func (o *ServiceGetValidatorSetByHeightOK) GetPayload() *ServiceGetValidatorSetByHeightOKBody {
	return o.Payload
}

func (o *ServiceGetValidatorSetByHeightOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ServiceGetValidatorSetByHeightOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceGetValidatorSetByHeightDefault creates a ServiceGetValidatorSetByHeightDefault with default headers values
func NewServiceGetValidatorSetByHeightDefault(code int) *ServiceGetValidatorSetByHeightDefault {
	return &ServiceGetValidatorSetByHeightDefault{
		_statusCode: code,
	}
}

/*
ServiceGetValidatorSetByHeightDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ServiceGetValidatorSetByHeightDefault struct {
	_statusCode int

	Payload *ServiceGetValidatorSetByHeightDefaultBody
}

// IsSuccess returns true when this service get validator set by height default response has a 2xx status code
func (o *ServiceGetValidatorSetByHeightDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this service get validator set by height default response has a 3xx status code
func (o *ServiceGetValidatorSetByHeightDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this service get validator set by height default response has a 4xx status code
func (o *ServiceGetValidatorSetByHeightDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this service get validator set by height default response has a 5xx status code
func (o *ServiceGetValidatorSetByHeightDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this service get validator set by height default response a status code equal to that given
func (o *ServiceGetValidatorSetByHeightDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the service get validator set by height default response
func (o *ServiceGetValidatorSetByHeightDefault) Code() int {
	return o._statusCode
}

func (o *ServiceGetValidatorSetByHeightDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cosmos/base/tendermint/v1beta1/validatorsets/{height}][%d] Service_GetValidatorSetByHeight default %s", o._statusCode, payload)
}

func (o *ServiceGetValidatorSetByHeightDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cosmos/base/tendermint/v1beta1/validatorsets/{height}][%d] Service_GetValidatorSetByHeight default %s", o._statusCode, payload)
}

func (o *ServiceGetValidatorSetByHeightDefault) GetPayload() *ServiceGetValidatorSetByHeightDefaultBody {
	return o.Payload
}

func (o *ServiceGetValidatorSetByHeightDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ServiceGetValidatorSetByHeightDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
ServiceGetValidatorSetByHeightDefaultBody service get validator set by height default body
swagger:model ServiceGetValidatorSetByHeightDefaultBody
*/
type ServiceGetValidatorSetByHeightDefaultBody struct {

	// code
	Code int32 `json:"code,omitempty"`

	// details
	Details []*ServiceGetValidatorSetByHeightDefaultBodyDetailsItems0 `json:"details"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this service get validator set by height default body
func (o *ServiceGetValidatorSetByHeightDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ServiceGetValidatorSetByHeightDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Service_GetValidatorSetByHeight default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("Service_GetValidatorSetByHeight default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this service get validator set by height default body based on the context it is used
func (o *ServiceGetValidatorSetByHeightDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ServiceGetValidatorSetByHeightDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Details); i++ {

		if o.Details[i] != nil {

			if swag.IsZero(o.Details[i]) { // not required
				return nil
			}

			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Service_GetValidatorSetByHeight default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("Service_GetValidatorSetByHeight default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ServiceGetValidatorSetByHeightDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ServiceGetValidatorSetByHeightDefaultBody) UnmarshalBinary(b []byte) error {
	var res ServiceGetValidatorSetByHeightDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ServiceGetValidatorSetByHeightDefaultBodyDetailsItems0 service get validator set by height default body details items0
swagger:model ServiceGetValidatorSetByHeightDefaultBodyDetailsItems0
*/
type ServiceGetValidatorSetByHeightDefaultBodyDetailsItems0 struct {

	// at type
	AtType string `json:"@type,omitempty"`

	// service get validator set by height default body details items0
	ServiceGetValidatorSetByHeightDefaultBodyDetailsItems0 map[string]interface{} `json:"-"`
}

// UnmarshalJSON unmarshals this object with additional properties from JSON
func (o *ServiceGetValidatorSetByHeightDefaultBodyDetailsItems0) UnmarshalJSON(data []byte) error {
	// stage 1, bind the properties
	var stage1 struct {

		// at type
		AtType string `json:"@type,omitempty"`
	}
	if err := json.Unmarshal(data, &stage1); err != nil {
		return err
	}
	var rcv ServiceGetValidatorSetByHeightDefaultBodyDetailsItems0

	rcv.AtType = stage1.AtType
	*o = rcv

	// stage 2, remove properties and add to map
	stage2 := make(map[string]json.RawMessage)
	if err := json.Unmarshal(data, &stage2); err != nil {
		return err
	}

	delete(stage2, "@type")
	// stage 3, add additional properties values
	if len(stage2) > 0 {
		result := make(map[string]interface{})
		for k, v := range stage2 {
			var toadd interface{}
			if err := json.Unmarshal(v, &toadd); err != nil {
				return err
			}
			result[k] = toadd
		}
		o.ServiceGetValidatorSetByHeightDefaultBodyDetailsItems0 = result
	}

	return nil
}

// MarshalJSON marshals this object with additional properties into a JSON object
func (o ServiceGetValidatorSetByHeightDefaultBodyDetailsItems0) MarshalJSON() ([]byte, error) {
	var stage1 struct {

		// at type
		AtType string `json:"@type,omitempty"`
	}

	stage1.AtType = o.AtType

	// make JSON object for known properties
	props, err := json.Marshal(stage1)
	if err != nil {
		return nil, err
	}

	if len(o.ServiceGetValidatorSetByHeightDefaultBodyDetailsItems0) == 0 { // no additional properties
		return props, nil
	}

	// make JSON object for the additional properties
	additional, err := json.Marshal(o.ServiceGetValidatorSetByHeightDefaultBodyDetailsItems0)
	if err != nil {
		return nil, err
	}

	if len(props) < 3 { // "{}": only additional properties
		return additional, nil
	}

	// concatenate the 2 objects
	return swag.ConcatJSON(props, additional), nil
}

// Validate validates this service get validator set by height default body details items0
func (o *ServiceGetValidatorSetByHeightDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this service get validator set by height default body details items0 based on context it is used
func (o *ServiceGetValidatorSetByHeightDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ServiceGetValidatorSetByHeightDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ServiceGetValidatorSetByHeightDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res ServiceGetValidatorSetByHeightDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ServiceGetValidatorSetByHeightOKBody service get validator set by height o k body
swagger:model ServiceGetValidatorSetByHeightOKBody
*/
type ServiceGetValidatorSetByHeightOKBody struct {

	// block height
	BlockHeight string `json:"block_height,omitempty"`

	// pagination
	Pagination *ServiceGetValidatorSetByHeightOKBodyPagination `json:"pagination,omitempty"`

	// validators
	Validators []*ServiceGetValidatorSetByHeightOKBodyValidatorsItems0 `json:"validators"`
}

// Validate validates this service get validator set by height o k body
func (o *ServiceGetValidatorSetByHeightOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePagination(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateValidators(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ServiceGetValidatorSetByHeightOKBody) validatePagination(formats strfmt.Registry) error {
	if swag.IsZero(o.Pagination) { // not required
		return nil
	}

	if o.Pagination != nil {
		if err := o.Pagination.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("serviceGetValidatorSetByHeightOK" + "." + "pagination")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("serviceGetValidatorSetByHeightOK" + "." + "pagination")
			}
			return err
		}
	}

	return nil
}

func (o *ServiceGetValidatorSetByHeightOKBody) validateValidators(formats strfmt.Registry) error {
	if swag.IsZero(o.Validators) { // not required
		return nil
	}

	for i := 0; i < len(o.Validators); i++ {
		if swag.IsZero(o.Validators[i]) { // not required
			continue
		}

		if o.Validators[i] != nil {
			if err := o.Validators[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("serviceGetValidatorSetByHeightOK" + "." + "validators" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("serviceGetValidatorSetByHeightOK" + "." + "validators" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this service get validator set by height o k body based on the context it is used
func (o *ServiceGetValidatorSetByHeightOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidatePagination(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateValidators(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ServiceGetValidatorSetByHeightOKBody) contextValidatePagination(ctx context.Context, formats strfmt.Registry) error {

	if o.Pagination != nil {

		if swag.IsZero(o.Pagination) { // not required
			return nil
		}

		if err := o.Pagination.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("serviceGetValidatorSetByHeightOK" + "." + "pagination")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("serviceGetValidatorSetByHeightOK" + "." + "pagination")
			}
			return err
		}
	}

	return nil
}

func (o *ServiceGetValidatorSetByHeightOKBody) contextValidateValidators(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Validators); i++ {

		if o.Validators[i] != nil {

			if swag.IsZero(o.Validators[i]) { // not required
				return nil
			}

			if err := o.Validators[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("serviceGetValidatorSetByHeightOK" + "." + "validators" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("serviceGetValidatorSetByHeightOK" + "." + "validators" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ServiceGetValidatorSetByHeightOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ServiceGetValidatorSetByHeightOKBody) UnmarshalBinary(b []byte) error {
	var res ServiceGetValidatorSetByHeightOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ServiceGetValidatorSetByHeightOKBodyPagination service get validator set by height o k body pagination
swagger:model ServiceGetValidatorSetByHeightOKBodyPagination
*/
type ServiceGetValidatorSetByHeightOKBodyPagination struct {

	// next key
	// Format: byte
	NextKey strfmt.Base64 `json:"next_key,omitempty"`

	// total
	Total string `json:"total,omitempty"`
}

// Validate validates this service get validator set by height o k body pagination
func (o *ServiceGetValidatorSetByHeightOKBodyPagination) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this service get validator set by height o k body pagination based on context it is used
func (o *ServiceGetValidatorSetByHeightOKBodyPagination) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ServiceGetValidatorSetByHeightOKBodyPagination) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ServiceGetValidatorSetByHeightOKBodyPagination) UnmarshalBinary(b []byte) error {
	var res ServiceGetValidatorSetByHeightOKBodyPagination
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ServiceGetValidatorSetByHeightOKBodyValidatorsItems0 service get validator set by height o k body validators items0
swagger:model ServiceGetValidatorSetByHeightOKBodyValidatorsItems0
*/
type ServiceGetValidatorSetByHeightOKBodyValidatorsItems0 struct {

	// address
	Address string `json:"address,omitempty"`

	// proposer priority
	ProposerPriority string `json:"proposer_priority,omitempty"`

	// pub key
	PubKey *ServiceGetValidatorSetByHeightOKBodyValidatorsItems0PubKey `json:"pub_key,omitempty"`

	// voting power
	VotingPower string `json:"voting_power,omitempty"`
}

// Validate validates this service get validator set by height o k body validators items0
func (o *ServiceGetValidatorSetByHeightOKBodyValidatorsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePubKey(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ServiceGetValidatorSetByHeightOKBodyValidatorsItems0) validatePubKey(formats strfmt.Registry) error {
	if swag.IsZero(o.PubKey) { // not required
		return nil
	}

	if o.PubKey != nil {
		if err := o.PubKey.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pub_key")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("pub_key")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this service get validator set by height o k body validators items0 based on the context it is used
func (o *ServiceGetValidatorSetByHeightOKBodyValidatorsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidatePubKey(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ServiceGetValidatorSetByHeightOKBodyValidatorsItems0) contextValidatePubKey(ctx context.Context, formats strfmt.Registry) error {

	if o.PubKey != nil {

		if swag.IsZero(o.PubKey) { // not required
			return nil
		}

		if err := o.PubKey.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pub_key")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("pub_key")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ServiceGetValidatorSetByHeightOKBodyValidatorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ServiceGetValidatorSetByHeightOKBodyValidatorsItems0) UnmarshalBinary(b []byte) error {
	var res ServiceGetValidatorSetByHeightOKBodyValidatorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ServiceGetValidatorSetByHeightOKBodyValidatorsItems0PubKey service get validator set by height o k body validators items0 pub key
swagger:model ServiceGetValidatorSetByHeightOKBodyValidatorsItems0PubKey
*/
type ServiceGetValidatorSetByHeightOKBodyValidatorsItems0PubKey struct {

	// at type
	AtType string `json:"@type,omitempty"`

	// service get validator set by height o k body validators items0 pub key
	ServiceGetValidatorSetByHeightOKBodyValidatorsItems0PubKey map[string]interface{} `json:"-"`
}

// UnmarshalJSON unmarshals this object with additional properties from JSON
func (o *ServiceGetValidatorSetByHeightOKBodyValidatorsItems0PubKey) UnmarshalJSON(data []byte) error {
	// stage 1, bind the properties
	var stage1 struct {

		// at type
		AtType string `json:"@type,omitempty"`
	}
	if err := json.Unmarshal(data, &stage1); err != nil {
		return err
	}
	var rcv ServiceGetValidatorSetByHeightOKBodyValidatorsItems0PubKey

	rcv.AtType = stage1.AtType
	*o = rcv

	// stage 2, remove properties and add to map
	stage2 := make(map[string]json.RawMessage)
	if err := json.Unmarshal(data, &stage2); err != nil {
		return err
	}

	delete(stage2, "@type")
	// stage 3, add additional properties values
	if len(stage2) > 0 {
		result := make(map[string]interface{})
		for k, v := range stage2 {
			var toadd interface{}
			if err := json.Unmarshal(v, &toadd); err != nil {
				return err
			}
			result[k] = toadd
		}
		o.ServiceGetValidatorSetByHeightOKBodyValidatorsItems0PubKey = result
	}

	return nil
}

// MarshalJSON marshals this object with additional properties into a JSON object
func (o ServiceGetValidatorSetByHeightOKBodyValidatorsItems0PubKey) MarshalJSON() ([]byte, error) {
	var stage1 struct {

		// at type
		AtType string `json:"@type,omitempty"`
	}

	stage1.AtType = o.AtType

	// make JSON object for known properties
	props, err := json.Marshal(stage1)
	if err != nil {
		return nil, err
	}

	if len(o.ServiceGetValidatorSetByHeightOKBodyValidatorsItems0PubKey) == 0 { // no additional properties
		return props, nil
	}

	// make JSON object for the additional properties
	additional, err := json.Marshal(o.ServiceGetValidatorSetByHeightOKBodyValidatorsItems0PubKey)
	if err != nil {
		return nil, err
	}

	if len(props) < 3 { // "{}": only additional properties
		return additional, nil
	}

	// concatenate the 2 objects
	return swag.ConcatJSON(props, additional), nil
}

// Validate validates this service get validator set by height o k body validators items0 pub key
func (o *ServiceGetValidatorSetByHeightOKBodyValidatorsItems0PubKey) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this service get validator set by height o k body validators items0 pub key based on context it is used
func (o *ServiceGetValidatorSetByHeightOKBodyValidatorsItems0PubKey) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ServiceGetValidatorSetByHeightOKBodyValidatorsItems0PubKey) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ServiceGetValidatorSetByHeightOKBodyValidatorsItems0PubKey) UnmarshalBinary(b []byte) error {
	var res ServiceGetValidatorSetByHeightOKBodyValidatorsItems0PubKey
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
